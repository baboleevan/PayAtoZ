@model EasyPay.Models.Order

@{
    ViewBag.Title = "Edit";
}

<div id="wrapper">
    <div id="login_title">
        <h5>
            Edit</h5>
    </div>
    <div id="container">
        <div id="inner_content">
            <div id="login_form">
@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Order</legend>

        @Html.HiddenFor(model => model.OrderId)

        <div class="editor-label">
            @Html.LabelFor(model => model.UserProfileId, "UserProfile")
        </div>
        <div class="editor-field">
            @Html.DropDownList("UserProfileId", String.Empty)
            @Html.ValidationMessageFor(model => model.UserProfileId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProviderServiceId, "ProviderService")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ProviderServiceId", String.Empty)
            @Html.ValidationMessageFor(model => model.ProviderServiceId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OrderDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OrderDate)
            @Html.ValidationMessageFor(model => model.OrderDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ItemCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ItemCode)
            @Html.ValidationMessageFor(model => model.ItemCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Remarks)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Remarks)
            @Html.ValidationMessageFor(model => model.Remarks)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Amount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Amount)
            @Html.ValidationMessageFor(model => model.Amount)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.commission)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.commission)
            @Html.ValidationMessageFor(model => model.commission)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.comments)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.comments)
            @Html.ValidationMessageFor(model => model.comments)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
</div>
</div>
</div>
</div>